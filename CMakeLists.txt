cmake_minimum_required (VERSION 2.8.11)
set(CMAKE_C_STANDARD 11)
find_program (BASH_PROGRAM bash)
project (LLV)
add_library(LLV STATIC src/collections/dll.c src/collections/ll.c src/helper.c src/llv.c src/list_helper.c src/general_collection_helper.c src/types/shared_types.c src/collections/array.c src/collections/queue.c src/collections/stack.c src/collections/vector.c src/env_var.c)
add_custom_target(run_tests ${BASH_PROGRAM} test_runner.sh)
add_dependencies(run_tests LLV)
target_link_libraries(LLV m)
target_link_libraries(run_tests m)

file( GLOB COLLECTION_TEST_SOURCES collection_tests/*.c )
file( GLOB OUTPUT_TEST_SOURCES output_tests/*.c )

foreach( test_file ${COLLECTION_TEST_SOURCES} )
    get_filename_component( filename ${test_file} NAME )
    string( REPLACE ".c" ".out" test_name ${filename} )
    add_executable( ${test_name} ${test_file} )
    target_link_libraries( ${test_name} LLV )
    set_target_properties( ${test_name} PROPERTIES RUNTIME_OUTPUT_DIRECTORY collection_tests )
    add_dependencies(run_tests ${test_name})
    target_link_libraries(${test_name} m)
endforeach( test_file ${COLLECTION_TEST_SOURCES} )

set(EXECUTABLE_OUTPUT_PATH "output_tests")
foreach( test_file ${OUTPUT_TEST_SOURCES} )
    get_filename_component( filename ${test_file} NAME )
    string( REPLACE ".c" ".out" test_name ${filename} )
    add_executable( ${test_name} ${test_file} )
    target_link_libraries( ${test_name} LLV )
    set_target_properties( ${test_name} PROPERTIES RUNTIME_OUTPUT_DIRECTORY output_tests )
    add_dependencies(run_tests ${test_name})
    target_link_libraries(${test_name} m)
endforeach( test_file ${COLLECTION_TEST_SOURCES} )
